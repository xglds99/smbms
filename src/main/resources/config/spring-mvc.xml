<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.1.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.ccu.smbms"/>
    <!-- 配置mvc的注解驱动 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <!-- 处理中文响应乱码-->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="defaultCharset" value="UTF-8"/>
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html</value>
                        <value>application/json</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- 静态资源配置 -->
    <mvc:resources location="/static/" mapping="/static/**"/>
    <mvc:resources location="/assets/" mapping="/assets/**"/>
    <mvc:resources location="/static/" mapping="/user/static/**"/>
    <mvc:resources location="/assets/" mapping="/user/assets/**"/>
    <mvc:resources location="/static/" mapping="/role/static/**"/>
    <mvc:resources location="/assets/" mapping="/role/assets/**"/>
    <mvc:resources location="/static/" mapping="/address/static/**"/>
    <mvc:resources location="/assets/" mapping="/address/assets/**"/>
    <mvc:resources location="/static/" mapping="/bill/static/**"/>
    <mvc:resources location="/assets/" mapping="/bill/assets/**"/>
    <mvc:resources location="/static/" mapping="/provider/static/**"/>
    <mvc:resources location="/assets/" mapping="/provider/assets/**"/>

    <!-- 配置拦截器 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 拦截所有mvc控制器 -->
            <mvc:mapping path="/**"/>
            <!-- mvc:exclude-mapping是另外一种拦截，它可以在你后来的测试中对某个页面进行不拦截，这样就不用在
                LoginInterceptor的preHandler方法里面获取不拦截的请求uri地址了(优选) -->
            <mvc:exclude-mapping path="/*" />
            <mvc:exclude-mapping path="/**/static/**" />
            <mvc:exclude-mapping path="/**/assets/**" />
            <mvc:exclude-mapping path="/login" />
            <mvc:exclude-mapping path="/register" />
            <bean class="com.ccu.smbms.interceptor.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>




    <bean id="templateResolver" class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/templates/"/>
        <property name="suffix" value=".html"/>
        <property name="templateMode" value="HTML5"/><!-- 这里会要求严格用HTML5语法，可改成不严格的LEGACYHTML5-->
        <property name="cacheable" value="false"/><!-- 关闭缓存-->
        <property name="characterEncoding" value="UTF-8"/><!-- 防中文乱码-->
    </bean>

    <bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
        <property name="enableSpringELCompiler" value="true"/>
    </bean>

    <bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"/>
        <property name="order" value="1"/>
        <!--<property name="viewNames" value="*.html,*.xhtml" />--><!-- 这个我不是很清楚是什么意思，设置的话就访问不了页面了-->
        <property name="characterEncoding" value="UTF-8"/>
    </bean>


    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
    </bean>
</beans>
